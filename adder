module full_adder (a, b, c, sum, carry);
input a, b, c;
output sum, carry;
Wire w1, w2, w3, w4;
xor x1(w1, a, b);
xor x2(sum, w1, c);
and a1(w2, a, b);
and a2(w3, b, c);
and a3(w4, a, c);
or o1(carry, w2, w3, w4);
endmodule
TESTBENCH (Full Adder)
module full_addertb;
reg a, b, c;
wire sum, carry;
full_adder dut (a, b, c, sum, carry);
initial
begin
a=0; b=0; c=0;
#10 a=0; b=0; c=1;
#10 a=0; b=1; c=0;
#10 a=0; b=1; c=1;
#10 a=1; b=0; c=0;
#10 a=1; b=0; c=1;
#10 a=1; b=1; c=0;
#10 a=1; b=1; c=1;
#10 $ stop;
end
endmodule
